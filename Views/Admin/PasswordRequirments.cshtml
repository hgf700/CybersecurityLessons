@model aspapp.Models.SecuritySettings
@{
    ViewData["Title"] = "Bezpieczeństwo";
}

<div class="container mt-4">
    @if (TempData["Message"] != null)
    {
        <div class="alert alert-success">@TempData["Message"]</div>
    }

    <h2>Bezpieczeństwo</h2>

    <form asp-action="SavePasswordPolicy" method="post">

        <div class="mb-3">
            <label asp-for="RequiredLength" class="form-label">Minimalna długość hasła</label>
            <input asp-for="RequiredLength" type="number" class="form-control" />
            <span asp-validation-for="RequiredLength" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="PasswordValidity" class="form-label">Ważność hasła (dni)</label>
            <input asp-for="PasswordValidity" type="number" class="form-control" />
            <span asp-validation-for="PasswordValidity" class="text-danger"></span>
        </div>

        <h5 class="mt-4">Wymagania dotyczące hasła</h5>

        <div class="d-flex flex-wrap gap-2">
            <button type="button" class="toggle-btn btn btn-outline-danger" data-field="RequireDigit">Wymaga liczbe</button>
            <button type="button" class="toggle-btn btn btn-outline-danger" data-field="RequireUppercase">Wielka litera</button>
            <button type="button" class="toggle-btn btn btn-outline-danger" data-field="RequireLowercase">Mała litera</button>
            <button type="button" class="toggle-btn btn btn-outline-danger" data-field="RequireNonAlphanumeric">Znak specjalny</button>
        </div>

        <!-- ukryte inputy do wysyłki wartości do modelu -->
        <input type="hidden" asp-for="RequireDigit" />
        <input type="hidden" asp-for="RequireUppercase" />
        <input type="hidden" asp-for="RequireLowercase" />
        <input type="hidden" asp-for="RequireNonAlphanumeric" />

        <button type="submit" class="btn btn-danger mt-4">Zapisz</button>
        <a href="@Url.Action("Index")" class="btn btn-secondary">Powrót</a>
    </form>
</div>

@section Scripts {
    <script>
        document.querySelectorAll('.toggle-btn').forEach(btn => {
            btn.addEventListener('click', function () {
                const field = this.dataset.field;
                const hiddenInput = document.querySelector(`input[name='${field}']`);

                // Zmieniamy stan
                const isActive = this.classList.toggle('btn-success');
                this.classList.toggle('btn-outline-danger', !isActive);
                this.textContent = this.textContent.replace(isActive ? '✗' : '✓', isActive ? '✓' : '✗');

                // Zmieniamy wartość ukrytego pola
                hiddenInput.value = isActive;
            });
        });
    </script>
}
